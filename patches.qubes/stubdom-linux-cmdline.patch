--- a/tools/libxl/libxl_create.c
+++ b/tools/libxl/libxl_create.c
@@ -152,7 +152,8 @@ int libxl__domain_build_info_setdefault(
         /* Check HVM direct boot parameters, we should honour ->ramdisk and
          * ->cmdline iff ->kernel is set.
          */
-        if (!b_info->kernel && (b_info->ramdisk || b_info->cmdline)) {
+        if (!b_info->kernel && (b_info->ramdisk || (b_info->cmdline &&
+            !libxl_defbool_val(b_info->device_model_stubdomain)))) {
             LOG(ERROR, "direct boot parameters specified but kernel missing");
             return ERROR_INVAL;
         }
--- a/tools/libxl/libxl_dm.c
+++ b/tools/libxl/libxl_dm.c
@@ -1085,7 +1085,7 @@ static int libxl__build_device_model_arg
         if (b_info->ramdisk)
             flexarray_vappend(dm_args, "-initrd", b_info->ramdisk, NULL);
 
-        if (b_info->cmdline)
+        if (b_info->cmdline && !is_stubdom)
             flexarray_vappend(dm_args, "-append", b_info->cmdline, NULL);
 
         if (b_info->u.hvm.serial || b_info->u.hvm.serial_list) {
@@ -1648,12 +1648,13 @@ static int libxl__vfb_and_vkb_from_hvm_g
 
 static int libxl__write_stub_dmargs(libxl__gc *gc,
                                     int dm_domid, int guest_domid,
-                                    char **args, bool linux_stubdom)
+                                    char **args, bool linux_stubdom,
+                                    char *kernelopts)
 {
     libxl_ctx *ctx = libxl__gc_owner(gc);
     int i;
     char *vm_path;
-    char *dmargs, *path;
+    char *dmargs, *path, *kernelopts_path;
     int dmargs_size;
     struct xs_permissions roperm[2];
     xs_transaction_t t;
@@ -1685,11 +1686,16 @@ static int libxl__write_stub_dmargs(libx
         i++;
     }
     path = GCSPRINTF("%s/image/dmargs", vm_path);
+    kernelopts_path = GCSPRINTF("%s/image/kernelopts", vm_path);
 
 retry_transaction:
     t = xs_transaction_start(ctx->xsh);
     xs_write(ctx->xsh, t, path, dmargs, strlen(dmargs));
     xs_set_permissions(ctx->xsh, t, path, roperm, ARRAY_SIZE(roperm));
+    if (kernelopts) {
+        xs_write(ctx->xsh, t, kernelopts_path, kernelopts, strlen(kernelopts));
+        xs_set_permissions(ctx->xsh, t, kernelopts_path, roperm, ARRAY_SIZE(roperm));
+    }
     xs_set_permissions(ctx->xsh, t, GCSPRINTF("%s/rtc/timeoffset", vm_path), roperm, ARRAY_SIZE(roperm));
     if (!xs_transaction_end(ctx->xsh, t, 0))
         if (errno == EAGAIN)
@@ -1853,7 +1859,8 @@ void libxl__spawn_stub_dm(libxl__egc *eg
     libxl__store_libxl_entry(gc, dm_domid, "stubdom-version",
         libxl_stubdomain_version_to_string(guest_config->b_info.stubdomain_version));
     libxl__write_stub_dmargs(gc, dm_domid, guest_domid, args,
-        guest_config->b_info.stubdomain_version == LIBXL_STUBDOMAIN_VERSION_LINUX);
+        guest_config->b_info.stubdomain_version == LIBXL_STUBDOMAIN_VERSION_LINUX,
+        guest_config->b_info.cmdline);
     libxl__xs_printf(gc, XBT_NULL,
                      GCSPRINTF("%s/image/device-model-domid",
                                libxl__xs_get_dompath(gc, guest_domid)),
